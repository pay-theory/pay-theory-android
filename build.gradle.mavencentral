import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import com.vanniktech.maven.publish.SonatypeHost
// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '2.0.21'
    repositories {
        google()
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        //Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:5.2.5"
        classpath 'com.android.tools.build:gradle:8.7.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        classpath "com.github.dcendents:android-maven-gradle-plugin:2.1"

        //Dokka (gradlew :PayTheorySDK:dokka)
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:1.9.20"

        //Jacoco
        classpath "org.jacoco:org.jacoco.core:0.8.7"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
    // Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.


}

plugins {
    id "signing"
    id "io.github.gradle-nexus.publish-plugin" version "2.0.0"
    id "org.jetbrains.dokka" version "1.9.20"
    id 'org.jetbrains.kotlin.android' version '2.0.21' apply false
    id "com.vanniktech.maven.publish" version "0.30.0" apply false
    id "com.gradleup.nmcp" version "0.0.8" apply false
}

apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'com.vanniktech.maven.publish'
apply plugin: 'com.gradleup.nmcp'


//tasks.register('androidSourcesJar', Jar) {
//    archiveClassifier.set('sources')
//    if (project.plugins.findPlugin("com.android.library")) {
//        from android.sourceSets.main.java.srcDirs
//        from android.sourceSets.main.kotlin.srcDirs
//    } else {
//        from sourceSets.main.java.srcDirs
//        from sourceSets.main.kotlin.srcDirs
//    }
//}

//tasks.withType(dokkaHtmlPartial.getClass()).configureEach {
//    pluginsMapConfiguration.set(
//            ["org.jetbrains.dokka.base.DokkaBase": """{ "separateInheritedMembers": true}"""]
//    )
//}


//nexusPublishing {
//    repositories {
//        sonatype {  //only for users registered in Sonatype after 24 Feb 2021
//            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
//            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
//            username = "$sonatype_user"
//            password = "$sonatype_pass"
//        }
//    }
//}

signing {
    sign publishing.publications
}


allprojects {
    tasks.withType(KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs += '-opt-in=kotlin.RequiresOptIn'
        }
    }

    repositories {
        google()
        mavenCentral()
        mavenLocal()
    }
//    mavenPublishing {
//        publishToMavenCentral(SonatypeHost.S01)
//
//        signAllPublications()
//    }
//    nmcp {
//        publishAllProjectsProbablyBreakingProjectIsolation {
//            username = "$mavenCentralUsername"
//            password = "$mavenCentralPassword"
//            publicationType = "AUTOMATIC"
//        }
//    }

}
//task clean(type: Delete) {
//    delete rootProject.layout.buildDirectory
//}
//
//// Maven publishing
//apply from: "${rootDir}/scripts/publish-root.gradle"