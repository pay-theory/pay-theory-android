plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    //test dependencies
    testImplementation 'androidx.test.ext:junit:1.0.0-beta02'
    testImplementation 'androidx.test:runner:1.1.0-beta02'
    testImplementation 'androidx.test:core:1.0.0-beta02'
    testImplementation "org.robolectric:robolectric:4.0.2"
    testImplementation("com.squareup.okhttp3:mockwebserver:4.9.0")

    // SafetyNet Attestation
    implementation "com.google.android.gms:play-services-safetynet:17.0.0"

    //google play services
    implementation "com.google.android.gms:play-services-base:17.5.0"

    //AWS android SDK
    implementation 'com.amazonaws:aws-android-sdk-kms:2.19.1'

    //OKHttp
    implementation("com.squareup.okhttp3:okhttp:4.9.0")

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.0'


}


apply plugin: 'org.jetbrains.dokka'

dokka {
    outputFormat = 'gfm'
    outputDirectory = "$buildDir/gfm"

    configuration {
        includeNonPublic = false
        skipEmptyPackages = true
        skipDeprecated = true
        reportUndocumented = true
        jdkVersion = 8
    }
}

task writeNewPom {
    doLast {
        pom {
            project {
                inceptionYear '2020'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
            }
        }.writeTo("$buildDir/pom.xml")
    }
}
